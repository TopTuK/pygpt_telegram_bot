name: Deploy production to server

on: workflow_dispatch

jobs:
    deploy:
        name: Deploy and run SGPT Bot
        runs-on: ubuntu-latest
        env:
            SSH_KEY_PATH: /tmp/ssh_key
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            - name: Make envfile
              run: export | grep "secret_" | sed "s/declare -x secret_//" > .env
              env:
                secret_TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
                secret_OPEN_AI_KEY: ${{ secrets.OPEN_AI_KEY }}
                secret_OPEN_AI_API_BASE: ${{ secrets.OPEN_AI_API_BASE }}
                secret_DIALOG_TIMEOUT: ${{ secrets.DIALOG_TIMEOUT }}
                secret_GENERATE_IMAGES_COUNT: ${{ secrets.GENERATE_IMAGES_COUNT }}
                secret_IMAGE_SIZE: ${{ secrets.IMAGE_SIZE }}
                secret_CHAT_MODE_PER_PAGE: ${{ secrets.CHAT_MODE_PER_PAGE }}
                secret_ENABLE_MESSAGE_STREAMING: ${{ secrets.ENABLE_MESSAGE_STREAMING }}
                secret_MONGODB_PORT: ${{ secrets.MONGODB_PORT }}
            - run: echo "${{ secrets.PRODUCTION_SSH_KEY }}" > ${{ env.SSH_KEY_PATH }} && chmod 600 ${{ env.SSH_KEY_PATH }}
            - run: scp -o StrictHostKeyChecking=no -i ${{ env.SSH_KEY_PATH }} .env ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }}:/root/sgptbot/.env
            - run: scp -o StrictHostKeyChecking=no -i ${{ env.SSH_KEY_PATH }} docker-compose.yml ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }}:/root/sgptbot/docker-compose.yml
            - run: ssh -i ${{ env.SSH_KEY_PATH }} ${{ secrets.PRODUCTION_SSH_USERNAME }}@${{ secrets.PRODUCTION_SSH_HOST }} "cd /root/sgptbot && docker login ghcr.io -u $GITHUB_ACTOR -p ${{ secrets.TOKEN }} && docker pull ghcr.io/toptuk/sgptbot:latest && docker-compose -f docker-compose.yml --env-file=.env up -d && docker system prune --all --force"